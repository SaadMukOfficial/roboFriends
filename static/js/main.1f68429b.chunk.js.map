{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/Scroll.js","Components/SearchBox.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Scroll","props","style","overflow","border","height","children","SearchBox","searchfields","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filterRobot","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAaeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCkBLK,EAvBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAIf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CACAR,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHDQ,EAAKP,UCHzBS,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,MAAOC,OAAQ,UAAxD,SACKJ,EAAMK,YCSJC,EAZG,SAAC,GAAiC,EAAhCC,aAAiC,IAAnBC,EAAkB,EAAlBA,aAC9B,OACI,qBAAKjB,UAAU,MAAf,SACI,uBACIkB,KAAK,SACLlB,UAAU,oCACVmB,YAAY,gBACZC,SAAUH,OCaXI,G,wDAnBX,WAAYZ,GAAO,IAAD,8BACd,cAAMA,IACDa,MAAQ,CACTC,UAAU,GAHA,E,qDAMlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKjB,MAAMK,a,GAfCc,cC2DZC,E,kDA9CX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACTlB,OAAQ,GACR4B,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEvB,OAAQmC,S,oBAO3C,WACI,MAA8Bb,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQ4B,EAAf,EAAeA,YACTQ,EAAcpC,EAAOqC,QAAO,SAAAC,GAC9B,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAKrD,OAAOvC,EAAOyC,OAEV,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWiB,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACI,eAAC,EAAD,WACI,cAAC,EAAD,CAAU1B,OAAQoC,IAClB,qBAAK9B,MAAO,CAACG,OAAQ,mBAKjC,gD,GAxCEe,aCFHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f68429b.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card = ({name, email, id}) => {\r\n    //const {name, email, id} = props;\r\n    return (  \r\n        <div className='tc bg-light-green dib br2 pa2 ma3 grow bw2 shadow-5' >\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\n//import {robots} from './robots';\r\nimport Card from './Card';\r\nconst CardList = ({robots}) => {\r\n    //if(true){\r\n    //    throw new Error('Nooooo')\r\n    //}\r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card key={user.id}\r\n                        id={user.id}\r\n                        name={user.name}\r\n                        email={user.email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n        \r\n\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n        <div style={{overflow: 'scroll', border: '0px', height: '1000px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfields, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                type='search'\r\n                className='pa3 ba b--yellow bg-lightest-blue'\r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true});\r\n    }\r\n    \r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oops. That is not goood</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\n//import { robots } from './robots';\r\nimport Scroll from '../Components/Scroll';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport './App.css'\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\n\r\n\r\n//const state = {\r\n//    robots: robots,\r\n//    searchfield: ''\r\n//}\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n        \r\n    }\r\n    render(){\r\n        const {robots, searchfield} = this.state;\r\n        const filterRobot = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        \r\n        //if(robots.length === 0){\r\n        //if(!robots.length){\r\n            return robots.length ?\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filterRobot}/>\r\n                            <div style={{height: '500px'}}></div>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n            ) : <h1>Loading...</h1> \r\n            \r\n        \r\n        \r\n        \r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card';\nimport App from './Containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import {robots} from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}